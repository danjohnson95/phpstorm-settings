<templateSet group="PHPUnit">
  <template name="func" value="/**&#10; * $TEST$&#10; * @test&#10; * @covers $COVER_FUCNTION$&#10; */&#10;public function $TEST_NAME$( $VARS$ ) {&#10;    $END$&#10;}" description="PHPUnit test function" toReformat="true" toShortenFQNames="true">
    <variable name="TEST" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="COVER_FUCNTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TEST_NAME" expression="snakeCase(TEST)" defaultValue="" alwaysStopAt="false" />
    <variable name="VARS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="@data" value="@dataProvider $PROVIDER$" description="dataProvider doc" toReformat="false" toShortenFQNames="true">
    <variable name="PROVIDER" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Comment" value="true" />
    </context>
  </template>
  <template name="shouldRecieve" value="shouldReceive( '$METHOD$' )" description="shouldReceive" toReformat="false" toShortenFQNames="true">
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Expression" value="true" />
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="setUpThis" value="/** @var $testClass$ */&#10;public $$$testClassLowerCase$;&#10;&#10;public function setUp(){&#10;  $this-&gt;$testClassLowerCase$ = new $testClass$();&#10;}" description="setUp with this" toReformat="false" toShortenFQNames="true">
    <variable name="testClass" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="testClassLowerCase" expression="camelCase(testClass)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
</templateSet>